{
  "createdAt": "2025-07-11T06:50:11.890Z",
  "updatedAt": "2025-09-02T11:20:55.208Z",
  "id": "2X4Su3nOex4CExsq",
  "name": "Daily check by views",
  "active": false,
  "isArchived": true,
  "nodes": [
    {
      "parameters": {
        "mode": "raw",
        "jsonOutput": "{\n  \"googleAdsKeys\": {\n    \"developerToken\": \"x4a0TMYbaSw1SCXSFrtRyQ\",\n    \"mccCustomerId\": \"1331716219\",\n    \"customerId\": \"3700886370\",\n    \"version\": \"v20\"\n  }\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        944,
        -272
      ],
      "id": "c688af81-73d0-440e-8ef2-e9b98600ed04",
      "name": "Google ads additional keys"
    },
    {
      "parameters": {
        "jsCode": "const result = [];\n\nfor (const item of items) {\n  const rows = item.json.results || [];\n  for (const row of rows) {\n    if (row.campaign.status === 'PAUSED' || row.campaign.status === 'REMOVED') {\n      continue;\n    }\n\n    const costMicrosStr = row.metrics?.costMicros ?? '0';\n    const totalCost = parseInt(costMicrosStr, 10) / 1e6;\n    const avgDailyCost = totalCost / 7;\n\n    result.push({\n      id: row.campaign.id,\n      name: row.campaign.name,\n      status: row.campaign.status,\n      totalCost,\n      avgDailyCost,\n      type: avgDailyCost < 15 ? 'micro' : 'standard'\n    });\n  }\n}\n\n// Возвращаем один элемент, в json которого лежит объект с массивом campaigns\nreturn result;\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1392,
        -272
      ],
      "id": "881e24bb-f5ac-4759-bfbc-0ea5426597c1",
      "name": "Code"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        1616,
        -272
      ],
      "id": "52a5f780-61ec-4359-804d-81da9f283b69",
      "name": "Loop Over Items"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://googleads.googleapis.com/v20/customers/3700886370/googleAds:search",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "googleAdsOAuth2Api",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "login-customer-id",
              "value": "={{ $('Google ads additional keys').first().json.googleAdsKeys.mccCustomerId }}"
            },
            {
              "name": "developer-token",
              "value": "={{ $('Google ads additional keys').first().json.googleAdsKeys.developerToken }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "query",
              "value": "SELECT       campaign.id,       campaign.name,       campaign.status,       metrics.cost_micros     FROM campaign     WHERE segments.date DURING LAST_7_DAYS"
            }
          ]
        },
        "options": {
          "response": {
            "response": {
              "responseFormat": "json"
            }
          }
        }
      },
      "id": "5b64f605-febe-4572-95a4-18708b876e77",
      "name": "Get companies",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [
        1168,
        -272
      ],
      "alwaysOutputData": false,
      "executeOnce": false,
      "credentials": {
        "googleAdsOAuth2Api": {
          "id": "ttyhreBK4xRNot0S",
          "name": "google@dizzain gads API"
        }
      },
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "1d8c38da-8025-4906-8042-11be81d55db1",
              "leftValue": "={{ $json.type }}",
              "rightValue": "standard",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1840,
        -336
      ],
      "id": "f5938303-2b9a-4f3a-a53a-5d07c2625388",
      "name": "If"
    },
    {
      "parameters": {
        "select": "channel",
        "channelId": {
          "__rl": true,
          "value": "C098WHM2KD5",
          "mode": "list",
          "cachedResultName": "i9-local-notifications"
        },
        "text": "=Компания: {{ $('Loop Over Items').item.json.name }}\nТип: Standard\nПроблема: просадка по показам (уменьшилось на {{ Math.round($json.dropPercent) }}%)",
        "otherOptions": {
          "includeLinkToWorkflow": false
        }
      },
      "type": "n8n-nodes-base.slack",
      "typeVersion": 2.3,
      "position": [
        2960,
        -432
      ],
      "id": "049d2c1e-dd8d-45a3-ab26-cfbc447d543e",
      "name": "Send a message",
      "webhookId": "6998fbaa-ac4f-4239-af91-ad1e66610590",
      "credentials": {
        "slackApi": {
          "id": "xzGeHM57eBQ6pACT",
          "name": "i9 local notifications"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Извлекаем значения\nconst last28Days = Number($('Last 28 days').first().json.results[0].metrics.impressions);\nconst last7Days = Number($input.first().json.results[0].metrics.impressions);\n\n// Проверка входных данных\nif (!Number.isFinite(last28Days) || !Number.isFinite(last7Days)) {\n  throw new Error('Передайте числовые значения: last28Days и last7Days.');\n}\nif (last28Days < 0 || last7Days < 0) {\n  throw new Error('Значения last28Days и last7Days не могут быть отрицательными.');\n}\n\n// Среднее количество просмотров в неделю за последние 28 дней\nconst avgPerWeek = last28Days / 4;\n\n// Если среднее = 0, падение считать бессмысленно\nlet dropPercent = null;\nlet decreasedBy30 = false;\n\nif (avgPerWeek > 0) {\n  dropPercent = (1 - (last7Days / avgPerWeek)) * 100; // процент падения\n  decreasedBy30 = dropPercent >= 30; // true, если падение >= 30%\n}\n\n// Возвращаем результат\nreturn [\n  {\n    json: {\n      last28Days,\n      last7Days,\n      avgPerWeek,\n      dropPercent,    // например, 32.5 — это падение на 32.5%\n      decreasedBy30   // итоговый true/false\n    }\n  }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2512,
        -240
      ],
      "id": "d17fd2ae-f67f-4fea-82ac-1a2b01c55650",
      "name": "Filter1"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "1f27cb39-ab76-45e5-9799-83fee36b4b98",
              "leftValue": "={{ $json.decreasedBy30 }}",
              "rightValue": "true",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        2752,
        -448
      ],
      "id": "110a9fee-59b4-46ce-97e9-70fcaa903499",
      "name": "If1"
    },
    {
      "parameters": {
        "select": "channel",
        "channelId": {
          "__rl": true,
          "value": "C098WHM2KD5",
          "mode": "list",
          "cachedResultName": "i9-local-notifications"
        },
        "text": "=Компания: {{ $('Loop Over Items').item.json.name }}\nТип: Micro\nПроблема: просадка по показам (уменьшилось на {{ Math.round($json.dropPercent) }}%)",
        "otherOptions": {
          "includeLinkToWorkflow": false
        }
      },
      "type": "n8n-nodes-base.slack",
      "typeVersion": 2.3,
      "position": [
        2960,
        -240
      ],
      "id": "e6bef2be-5cf1-4bb6-8c09-3255c1d3be8e",
      "name": "Send a message1",
      "webhookId": "6998fbaa-ac4f-4239-af91-ad1e66610590",
      "credentials": {
        "slackApi": {
          "id": "xzGeHM57eBQ6pACT",
          "name": "i9 local notifications"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "1f27cb39-ab76-45e5-9799-83fee36b4b98",
              "leftValue": "={{ $json.decreasedBy30 }}",
              "rightValue": "true",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        2736,
        -240
      ],
      "id": "641fbdc2-0b91-482d-a33e-a9f2050a1f53",
      "name": "If2"
    },
    {
      "parameters": {
        "jsCode": "// Loop over input items and add a new field called 'myNewField' to the JSON of each one\nfor (const item of $input.all()) {\n  item.json.myNewField = 1;\n}\n\nreturn $input.all();"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        3184,
        -240
      ],
      "id": "86aa84d6-b53e-4ac6-a188-7ba09b6728af",
      "name": "Code1"
    },
    {
      "parameters": {
        "jsCode": "const last7Days = Number($('Last 7 days').first().json.results[0].metrics.impressions);\nconst yesterday  = Number($input.first().json.results[0].metrics.impressions);\n\n// Валидация\nif (!Number.isFinite(last7Days) || !Number.isFinite(yesterday)) {\n  throw new Error('Передайте числовые значения: last7Days и yesterday.');\n}\nif (last7Days < 0 || yesterday < 0) {\n  throw new Error('Значения last7Days и yesterday не могут быть отрицательными.');\n}\n\n// Среднее за день за последние 7 дней\nconst avgPerDay = last7Days / 7;\n\n// Если среднее 0, падение посчитать нельзя — считаем, что падения нет\nlet dropPercent = null;\nlet decreasedBy30 = false;\n\nif (avgPerDay > 0) {\n  dropPercent = (1 - (yesterday / avgPerDay)) * 100; // в процентах\n  decreasedBy30 = dropPercent >= 30; // true если падение ≥ 30%\n}\n\n// Вернём один item с результатами\nreturn [\n  {\n    json: {\n      last7Days,\n      yesterday,\n      avgPerDay,\n      dropPercent,      // например, 35.7 означает падение на 35.7%\n      decreasedBy30     // <-- это ваш \"return true/false\"\n    }\n  }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2560,
        -448
      ],
      "id": "1ce678c5-b805-4cda-a108-906ce4911b98",
      "name": "Filter2"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://googleads.googleapis.com/v20/customers/3700886370/googleAds:search",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "googleAdsOAuth2Api",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "login-customer-id",
              "value": "={{ $('Google ads additional keys').first().json.googleAdsKeys.mccCustomerId }}"
            },
            {
              "name": "developer-token",
              "value": "={{ $('Google ads additional keys').first().json.googleAdsKeys.developerToken }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "query",
              "value": "=SELECT\n  campaign.id,\n  campaign.name,\n  metrics.impressions\nFROM\n  campaign\nWHERE\n  campaign.id = {{ $json.id }}\n  AND segments.date DURING LAST_7_DAYS"
            }
          ]
        },
        "options": {
          "response": {
            "response": {
              "responseFormat": "json"
            }
          }
        }
      },
      "id": "dabe78ce-ae5e-43dc-9f79-73ed333a9c7e",
      "name": "Last 7 days",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [
        2112,
        -448
      ],
      "alwaysOutputData": false,
      "executeOnce": false,
      "credentials": {
        "googleAdsOAuth2Api": {
          "id": "ttyhreBK4xRNot0S",
          "name": "google@dizzain gads API"
        }
      },
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://googleads.googleapis.com/v20/customers/3700886370/googleAds:search",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "googleAdsOAuth2Api",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "login-customer-id",
              "value": "={{ $('Google ads additional keys').first().json.googleAdsKeys.mccCustomerId }}"
            },
            {
              "name": "developer-token",
              "value": "={{ $('Google ads additional keys').first().json.googleAdsKeys.developerToken }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "query",
              "value": "=SELECT\n  campaign.id,\n  campaign.name,\n  metrics.impressions\nFROM\n  campaign\nWHERE\n  campaign.id = {{ $json.results[0].campaign.id }}\n  AND segments.date DURING YESTERDAY"
            }
          ]
        },
        "options": {
          "response": {
            "response": {
              "responseFormat": "json"
            }
          }
        }
      },
      "id": "571be4c7-202a-4a9f-86a1-eaf9b650f882",
      "name": "Yesterday",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [
        2336,
        -448
      ],
      "alwaysOutputData": false,
      "executeOnce": false,
      "credentials": {
        "googleAdsOAuth2Api": {
          "id": "ttyhreBK4xRNot0S",
          "name": "google@dizzain gads API"
        }
      },
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://googleads.googleapis.com/v20/customers/3700886370/googleAds:search",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "googleAdsOAuth2Api",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "login-customer-id",
              "value": "={{ $('Google ads additional keys').first().json.googleAdsKeys.mccCustomerId }}"
            },
            {
              "name": "developer-token",
              "value": "={{ $('Google ads additional keys').first().json.googleAdsKeys.developerToken }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "query",
              "value": "=SELECT\n  campaign.id,\n  campaign.name,\n  metrics.impressions\nFROM\n  campaign\nWHERE\n  campaign.id = {{ $json.id }}\n  AND segments.date BETWEEN '{{ new Date(Date.now() - 28 * 24 * 60 * 60 * 1000).toISOString().split('T')[0] }}' AND '{{ new Date(Date.now() - 1 * 24 * 60 * 60 * 1000).toISOString().split('T')[0] }}'"
            }
          ]
        },
        "options": {
          "response": {
            "response": {
              "responseFormat": "json"
            }
          }
        }
      },
      "id": "69708ccd-f246-458e-94e5-11c606c624c6",
      "name": "Last 28 days",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [
        2064,
        -272
      ],
      "alwaysOutputData": false,
      "executeOnce": false,
      "credentials": {
        "googleAdsOAuth2Api": {
          "id": "ttyhreBK4xRNot0S",
          "name": "google@dizzain gads API"
        }
      },
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://googleads.googleapis.com/v20/customers/3700886370/googleAds:search",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "googleAdsOAuth2Api",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "login-customer-id",
              "value": "={{ $('Google ads additional keys').first().json.googleAdsKeys.mccCustomerId }}"
            },
            {
              "name": "developer-token",
              "value": "={{ $('Google ads additional keys').first().json.googleAdsKeys.developerToken }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "query",
              "value": "=SELECT\n  campaign.id,\n  campaign.name,\n  metrics.impressions\nFROM\n  campaign\nWHERE\n  campaign.id = {{ $json.results[0].campaign.id }}\n  AND segments.date DURING LAST_7_DAYS"
            }
          ]
        },
        "options": {
          "response": {
            "response": {
              "responseFormat": "json"
            }
          }
        }
      },
      "id": "dda57e5e-6ad5-4995-add2-895b4678abfe",
      "name": "Last 7 days2",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [
        2288,
        -272
      ],
      "alwaysOutputData": false,
      "executeOnce": false,
      "credentials": {
        "googleAdsOAuth2Api": {
          "id": "ttyhreBK4xRNot0S",
          "name": "google@dizzain gads API"
        }
      },
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "cronExpression",
              "expression": "00 2 * * *"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        720,
        -272
      ],
      "id": "d92d1cdc-6f7d-42f5-b532-a3d75dc4afb0",
      "name": "Schedule Trigger"
    }
  ],
  "connections": {
    "Google ads additional keys": {
      "main": [
        [
          {
            "node": "Get companies",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [],
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get companies": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Last 7 days",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Last 28 days",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If1": {
      "main": [
        [
          {
            "node": "Send a message",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Code1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter1": {
      "main": [
        [
          {
            "node": "If2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If2": {
      "main": [
        [
          {
            "node": "Send a message1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Code1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send a message": {
      "main": [
        [
          {
            "node": "Code1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send a message1": {
      "main": [
        [
          {
            "node": "Code1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code1": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Last 7 days": {
      "main": [
        [
          {
            "node": "Yesterday",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Yesterday": {
      "main": [
        [
          {
            "node": "Filter2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter2": {
      "main": [
        [
          {
            "node": "If1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Last 28 days": {
      "main": [
        [
          {
            "node": "Last 7 days2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Last 7 days2": {
      "main": [
        [
          {
            "node": "Filter1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "Google ads additional keys",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": {
    "node:Schedule Trigger": {
      "recurrenceRules": []
    },
    "global": {
      "count": 11
    }
  },
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "pinData": {},
  "versionId": "4bd5891e-3106-46e8-a5b2-cb110b9c9a3f",
  "triggerCount": 1,
  "shared": [
    {
      "createdAt": "2025-08-28T14:28:28.909Z",
      "updatedAt": "2025-08-28T14:28:28.909Z",
      "role": "workflow:owner",
      "workflowId": "2X4Su3nOex4CExsq",
      "projectId": "flRKzvtMN6hhu506"
    }
  ],
  "tags": []
}
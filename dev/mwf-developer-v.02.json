{
  "createdAt": "2025-08-23T13:17:05.173Z",
  "updatedAt": "2025-08-25T10:30:44.191Z",
  "id": "rMgFI9bJHqHsnd9n",
  "name": "MWF-Developer v.02",
  "active": false,
  "isArchived": false,
  "nodes": [
    {
      "parameters": {
        "workflowInputs": {
          "values": [
            {
              "name": "input"
            },
            {
              "name": "sessionId"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1.1,
      "position": [
        -304,
        64
      ],
      "id": "fee4e877-cecb-48de-b615-5cec555a95f0",
      "name": "When Executed by Another Workflow"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "claude-opus-4-20250514",
          "mode": "list",
          "cachedResultName": "Claude Opus 4"
        },
        "options": {
          "maxTokensToSample": 8000,
          "thinking": true,
          "thinkingBudget": 1024
        }
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatAnthropic",
      "typeVersion": 1.3,
      "position": [
        16,
        352
      ],
      "id": "96ed05c7-27bd-4b76-bc40-06564519e014",
      "name": "Anthropic Chat Model",
      "credentials": {
        "anthropicApi": {
          "id": "4cYVYzk16qrR9h9B",
          "name": "Anthropic account"
        }
      }
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "o3",
          "mode": "list",
          "cachedResultName": "o3"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        32,
        592
      ],
      "id": "6257a228-1a8b-4cce-83dd-e992d9f1d4eb",
      "name": "OpenAI Chat Model1",
      "credentials": {
        "openAiApi": {
          "id": "dcmVPYyhdCrHZYTu",
          "name": "OpenAi account (paid)"
        }
      }
    },
    {
      "parameters": {
        "modelName": "models/gemini-2.5-pro",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        208,
        592
      ],
      "id": "aece2da1-6eaa-4482-a63d-531b2b02648b",
      "name": "Google Gemini Chat Model",
      "credentials": {
        "googlePalmApi": {
          "id": "jMgbCZ8ykjnrWbIr",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "operation": "text",
        "options": {}
      },
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        48,
        64
      ],
      "id": "1f5d6dff-56a5-4750-8246-fb6745be0543",
      "name": "Extract from File"
    },
    {
      "parameters": {
        "operation": "download",
        "fileId": {
          "__rl": true,
          "value": "1dyK425KJCy7KMiD1b4wSz1typ6DBfTqVdm9U3vBG8ds",
          "mode": "list",
          "cachedResultName": "n8n Documentation",
          "cachedResultUrl": "https://docs.google.com/document/d/1dyK425KJCy7KMiD1b4wSz1typ6DBfTqVdm9U3vBG8ds/edit?usp=drivesdk"
        },
        "options": {
          "googleFileConversion": {
            "conversion": {
              "docsToFormat": "text/plain"
            }
          }
        }
      },
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        -112,
        64
      ],
      "id": "1a49c3bb-86ac-4633-807b-30d061233da6",
      "name": "Get n8n Docs",
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "eSNqSATRHln2HTCD",
          "name": "Google Dizzain account"
        }
      }
    },
    {
      "parameters": {
        "autoFix": true
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.3,
      "position": [
        880,
        272
      ],
      "id": "61500793-8a32-4424-b47b-fcece17e6fa1",
      "name": "Structured Output Parser"
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('When Executed by Another Workflow').item.json.sessionId }}",
        "collectionName": "n8n_agentBuilder_chat_histories",
        "databaseName": "agents_talks",
        "contextWindowLength": 10
      },
      "type": "@n8n/n8n-nodes-langchain.memoryMongoDbChat",
      "typeVersion": 1,
      "position": [
        384,
        592
      ],
      "id": "ae008eff-3573-4d98-8242-b4a0f237859a",
      "name": "MongoDB Chat Memory",
      "credentials": {
        "mongoDb": {
          "id": "WJCKSHEZDZGur3kD",
          "name": "agenttobuildagent"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Current task from WFManager: {{ $('When Executed by Another Workflow').item.json.input }}",
        "hasOutputParser": true,
        "options": {
          "systemMessage": "=[ROLE]\nТы — WFDeveloper, экспертный AI-разработчик автоматизаций для n8n. Твоя задача — взять стратегический план от WFManager и превратить его в полнофункциональный, элегантный и готовый к работе воркфлоу в формате JSON. Ты обладаешь творческой свободой в выборе лучших технических решений, но должен строго следовать стратегическим целям.\n\n[PERSONA]\nТы — проактивный и дотошный профессионал. Ты не просто выполняешь задачу, а создаешь качественный продукт, который будет понятен пользователю. Ты предвидишь потребности и документируешь свою работу с помощью Sticky Notes.\n\n[TOOLS]\nУ тебя в распоряжении есть инструмент - getAllNodes. \nИнструмент getAllNodes является твоим единственным источником правды о том, какие узлы доступны для использования.\n\nПеред тем как начать собирать воркфлоу, вызови этот инструмент, чтобы проверить, существуют ли все необходимые узлы. Например, если пользователь просит \"получать данные из Google Sheets и отправлять их в Telegram\", сначала убедись, что узлы для \"Google Sheets\" и \"Telegram\" есть в списке.\n\nЭтот инструмент возвращает JSON со списком всех доступных нод внутри n8n.\n\n[INPUT]\nТвой промпт всегда начинается с фразы \"To WFDeveloper:\" и содержит JSON со стратегическим планом.\n\n[КЛЮЧЕВЫЕ ТРЕБОВАНИЯ К РЕЗУЛЬТАТУ]\nТЫ ОБЯЗАН следовать этим правилам без исключений:\n\nЗаполнять Параметры: Ты должен заполнить секцию parameters для каждой ноды. Это включает в себя использование n8n-выражений для передачи данных между нодами. Не оставляй параметры пустыми!\n\nСоздавать Осмысленные Промпты: Для AI-нод (например, OpenAI) ты обязан написать качественный и подробный промпт, который решает задачу, описанную в плане.\n\nДобавлять Информативные Sticky Notes: Для каждого ключевого шага воркфлоу ты должен добавить ноду n8n-nodes-base.stickyNote и заполнить ее параметр content полезным описанием того, что происходит на этом шаге, и что пользователю может потребоваться настроить (например, credentials).\n\nИспользовать Современные Ноды: Если в плане упоминается AI, отдавай предпочтение встроенной ноде AI Agent (@n8n/n8n-nodes-langchain.agent), так как она более гибкая.\n\nСтрого Следовать Плану: Твоя креативность проявляется в реализации, но финальный воркфлоу должен полностью соответствовать всем stages и objective из стратегического плана.\n\n[ФОРМАТ ВЫВОДА]\nТвой ответ должен быть ТОЛЬКО JSON-объектом.\n\nОн должен начинаться с { и заканчиваться }.\n\nНикакого текста, объяснений, или markdown-форматирования (```json) до или после JSON. Только чистый, валидный JSON в соответствии с API документацией n8n:\n\n{\n  \"name\": \"Workflow 1\",\n  \"nodes\": [\n    {\n      \"id\": \"0f5532f9-36ba-4bef-86c7-30d607400b15\",\n      \"name\": \"Jira\",\n      \"webhookId\": \"string\",\n      \"disabled\": true,\n      \"notesInFlow\": true,\n      \"notes\": \"string\",\n      \"type\": \"n8n-nodes-base.Jira\",\n      \"typeVersion\": 1,\n      \"executeOnce\": false,\n      \"alwaysOutputData\": false,\n      \"retryOnFail\": false,\n      \"maxTries\": 0,\n      \"waitBetweenTries\": 0,\n      \"continueOnFail\": false,\n      \"onError\": \"stopWorkflow\",\n      \"position\": [\n        -100,\n        80\n      ],\n      \"parameters\": {\n        \"additionalProperties\": {}\n      },\n      \"credentials\": {\n        \"jiraSoftwareCloudApi\": {\n          \"id\": \"35\",\n          \"name\": \"jiraApi\"\n        }\n      }\n    }\n  ],\n  \"connections\": {\n    \"main\": [\n      {\n        \"node\": \"Jira\",\n        \"type\": \"main\",\n        \"index\": 0\n      }\n    ]\n  },\n  \"settings\": {\n    \"saveExecutionProgress\": true,\n    \"saveManualExecutions\": true,\n    \"saveDataErrorExecution\": \"all\",\n    \"saveDataSuccessExecution\": \"all\",\n    \"executionTimeout\": 3600,\n    \"errorWorkflow\": \"VzqKEW0ShTXA5vPj\",\n    \"timezone\": \"America/New_York\",\n    \"executionOrder\": \"v1\"\n  },\n  \"staticData\": {\n    \"lastId\": 1\n  },\n  \"shared\": [\n    {\n      \"role\": \"workflow:owner\",\n      \"workflowId\": \"2tUt1wbLX592XDdX\",\n      \"projectId\": \"2tUt1wbLX592XDdX\",\n      \"project\": {\n        \"name\": \"string\"\n      }\n    }\n  ]\n}\n\nОБЯЗАТЕЛЬНЫЕ для наличия узлы внутри готового workflow:\nname - string\nnodes - Array of objects (node)\nconnections - object\nsettings - object (workflowSettings)\n\n\n\n[n8n Примеры реализации]\n\n{{ $json.data }}"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2,
      "position": [
        320,
        64
      ],
      "id": "4313fb74-a888-4f31-a90b-a35cb33327c1",
      "name": "WFDeveloper"
    },
    {
      "parameters": {
        "operation": "aggregate",
        "collection": "n8n_agentBuilder_chat_histories",
        "query": "=[\n  { \"$match\": { \"sessionId\": \"={{ $('When Executed by Another Workflow').item.json.sessionId }}\" } },\n  {\n    \"$set\": {\n      \"messages\": {\n        \"$map\": {\n          \"input\": { \"$ifNull\": [\"$messages\", []] },\n          \"as\": \"m\",\n          \"in\": {\n            \"$mergeObjects\": [\n              \"$$m\",\n              {\n                \"additional_kwargs\": { \"$ifNull\": [\"$$m.additional_kwargs\", {}] },\n                \"data\": {\n                  \"$mergeObjects\": [\n                    { \"$ifNull\": [\"$$m.data\", {}] },\n                    { \"additional_kwargs\": { \"$ifNull\": [\"$$m.data.additional_kwargs\", {}] } }\n                  ]\n                }\n              }\n            ]\n          }\n        }\n      }\n    }\n  },\n  { \"$merge\": { \"into\": \"n8n_agentBuilder_chat_histories\", \"on\": \"_id\", \"whenMatched\": \"replace\", \"whenNotMatched\": \"discard\" } }\n]"
      },
      "type": "n8n-nodes-base.mongoDb",
      "typeVersion": 1.2,
      "position": [
        -288,
        -144
      ],
      "id": "90b3a39f-e6b7-48c5-86fa-a04c30a346c3",
      "name": "Aggregate documents",
      "credentials": {
        "mongoDb": {
          "id": "WJCKSHEZDZGur3kD",
          "name": "agenttobuildagent"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('When Executed by Another Workflow').item.json.sessionId }}",
        "contextWindowLength": 10
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        224,
        336
      ],
      "id": "60507eba-93fa-4b91-96a5-779f1959d4ec",
      "name": "Simple Memory"
    },
    {
      "parameters": {
        "description": "Вызови этот инструмент, когда тебе понадобится список всех доступных нод внутри N8N",
        "workflowId": {
          "__rl": true,
          "value": "yVanC6VJTxesNsuU",
          "mode": "list",
          "cachedResultName": "getAllNodes.tool"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {},
          "matchingColumns": [],
          "schema": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.2,
      "position": [
        480,
        336
      ],
      "id": "3b1a6413-c6c0-4bf7-813c-6db6d5ecdabf",
      "name": "getAllNodes"
    }
  ],
  "connections": {
    "When Executed by Another Workflow": {
      "main": [
        [
          {
            "node": "Get n8n Docs",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Anthropic Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "WFDeveloper",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Get n8n Docs": {
      "main": [
        [
          {
            "node": "Extract from File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract from File": {
      "main": [
        [
          {
            "node": "WFDeveloper",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser": {
      "ai_outputParser": [
        []
      ]
    },
    "MongoDB Chat Memory": {
      "ai_memory": [
        []
      ]
    },
    "Google Gemini Chat Model": {
      "ai_languageModel": [
        []
      ]
    },
    "OpenAI Chat Model1": {
      "ai_languageModel": [
        []
      ]
    },
    "WFDeveloper": {
      "main": [
        []
      ]
    },
    "Aggregate documents": {
      "main": [
        []
      ]
    },
    "Simple Memory": {
      "ai_memory": [
        [
          {
            "node": "WFDeveloper",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "getAllNodes": {
      "ai_tool": [
        [
          {
            "node": "WFDeveloper",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "pinData": {},
  "versionId": "1ae40e2f-8032-4be3-91c3-d55f4ec259c9",
  "triggerCount": 0,
  "shared": [
    {
      "createdAt": "2025-08-28T14:34:44.271Z",
      "updatedAt": "2025-08-28T14:34:44.271Z",
      "role": "workflow:owner",
      "workflowId": "rMgFI9bJHqHsnd9n",
      "projectId": "flRKzvtMN6hhu506"
    }
  ],
  "tags": []
}